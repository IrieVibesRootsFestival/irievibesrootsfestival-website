USAGE
	git-ftp <action> [<options>] [<url>]


DESCRIPTION
	git-ftp does FTP the Git way.

	It uses Git to determine which local files have changed since the last
	deployment to the remote server and saves you time and bandwidth by
	uploading only those files.

	It keeps track of the deployed state by uploading the SHA1 of the last
	deployed commit in a log file.

ACTIONS
	. init
		Does an initial upload of the latest version of all non-ignored
		git-tracked files to the remote server and creates .git-ftp.log
		file containing the SHA1 of the latest commit.

	. catchup
		Updates the commit id stored on the server.

	. push
		Uploads git-tracked files which have changed since last upload.

	. download (EXPERIMENTAL)
		Downloads changes from the remote host into your working tree.
		WARNING: It can delete local untracked files that are not
		listed in your .git-ftp-ignore file.

	. pull (EXPERIMENTAL)
		Downloads changes from the remote server into a separate commit
		and merges them into your current branch.

	. snapshot (EXPERIMENTAL)
		Downloads files into a new Git repository. Takes an additional
		optional argument as local destination directory. Example:
		`git-ftp snapshot ftp://example.com/public_html projects/example`

	. show
		Downloads last uploaded SHA1 from log and hooks `git show`.

	. log
		Downloads last uploaded SHA1 from log and hooks `git log`.

	. add-scope
		Add a scope (e.g. dev, production, testing).

	. remove-scope
		Completely remove a scope.

	. help
		Shows this help screen.


URL
	. FTP (default)		host.example.com[:<port>][/<remote path>]
	. FTP			ftp://host.example.com[:<port>][/<remote path>]
	. SFTP			sftp://host.example.com[:<port>][/<remote path>]
	. FTPS			ftps://host.example.com[:<port>][/<remote path>]
	. FTPES			ftpes://host.example.com[:<port>][/<remote path>]


OPTIONS
	-h, --help		Shows this help screen.
	-u, --user		FTP login name.
	-p, --passwd		FTP password.
	-P, --ask-passwd	Ask for FTP password interactively.
	-k, --keychain		FTP password from KeyChain (Mac OS X only).
	-b, --branch		Git branch to push
	-s, --scope		Using a scope (e.g. dev, production, testing).
	-D, --dry-run		Dry run: Does not upload anything.
	-a, --all		Uploads all files, ignores deployed SHA1 hash.
	-c, --commit		Sets SHA1 hash of last deployed commit by option.
	-A, --active		Use FTP active mode.
	-l, --lock		Enable/Disable remote locking.
	-f, --force		Force, does not ask questions.
	-n, --silent		Silent mode.
	-v, --verbose		Verbose mode.
	-vv			Very verbose or debug mode.
	--remote-root		Specifies remote root directory
	--syncroot		Specifies a local directory to sync from as if it were the git project root path.
	--key			SSH private key file name for SFTP.
	--pubkey		SSH public key file name. Used with --key option.
	--insecure		Don't verify server's certificate.
	--cacert		Specify a <file> as CA certificate store. Useful when a server has got a self-signed certificate.
	--no-commit		Perform the merge at the and of pull but do not autocommit, to have the chance to inspect and further tweak the merge result before committing.
	--changed-only		Download or pull only files changed since the deployed commit while ignoring all other files.
	--no-verify		Bypass the pre-ftp-push hook.
	--enable-post-errors	Fails if post-ftp-push hook raises an error
	--disable-epsv		Tell curl to disable the use of the EPSV command when doing passive FTP transfers. Curl will normally always first attempt to use EPSV before PASV, but with this option, it will not try using EPSV.
	--auto-init		Automatically run init action when running push action
	--version		Prints version.
	-x, --proxy		Use the specified proxy.


EXAMPLES
	. git-ftp push -u john ftp://ftp.example.com:4445/public_ftp -p -v
	. git-ftp push -p -u john -v ftp.example.com:4445:/public_ftp
	. git-ftp push -p -u john ftp.example.com --branch prod
	. git-ftp add-scope production ftp://user:secr3t@ftp.example.com:4445/public_ftp
	. git-ftp push --scope production
	. git-ftp remove-scope production


SET DEFAULTS
	. git config git-ftp.user john
	. git config git-ftp.url ftp.example.com
	. git config git-ftp.password secr3t
	. git config git-ftp.remote-root "~/www/"
	. git config git-ftp.branch prod
	. git config git-ftp.syncroot path/dir
	. git config git-ftp.cacert path/cacert
	. git config git-ftp.deployedsha1file mySHA1File
	. git config git-ftp.insecure 1
	. git config git-ftp.keychain user@example.com


SET SCOPE DEFAULTS
	e.g. your scope is 'testing'
	. git config git-ftp.testing.url ftp.example.local


VERSION
	1.6.0
